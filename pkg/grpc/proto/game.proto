syntax = "proto3";
package proto;
option go_package = "pkg/grpc/proto";

service GameService {
    rpc GetByIDAndRevisionID(Request) returns (GameResponse) {}

    // GetBySlug returns latest published game by slug
    rpc GetBySlug(GetBySlugRequest) returns (GameResponse) {}

    // GetByID returns latest published game by slug
    rpc GetByID(GetByIDRequest) returns (GameResponse) {}
}

message GetBySlugRequest {
    string slug = 1;
}

message GetByIDRequest {
    string gameID = 1;
}

message Request {
    string gameID = 1;
    uint64 revisionID = 2;
}

message GameResponse {
    Game game = 1;
}

message Game {
    string ID = 1;
    string title = 2;
    string type = 3;
    uint64 revisionID = 4;
    string summary = 5;
    string description = 6;
    string slug = 7;
    string license = 8;
    repeated string platforms = 9;
    repeated Tag tags = 10;
    repeated Feature features = 11;
    repeated Developer developers = 12;
    repeated Genre genres = 13;
    repeated Publisher publishers = 14;
    repeated SystemRequirements systemRequirements = 15;
    string trailer = 17;
}

message Tag {
    uint64 ID = 1;
    string name = 2;
}

message Developer {
    uint64 ID = 1;
    string name = 2;
}

message Feature {
    uint64 ID = 1;
    string name = 2;
    string icon = 3;
}

message Genre {
    uint64 ID = 1;
    string name = 2;
}

message Publisher {
    uint64 ID = 1;
    string name = 2;
}

message SystemRequirements {
    string platform = 1;
    RequirementsSet minimal = 2;
    RequirementsSet recommended = 3;
}

message RequirementsSet {
    string CPU = 1;
    string GPU = 2;
    uint32 DiskSpace = 3;
    uint32 RAM = 4;
}