# Entities

# Game represents game object
type Game {
	# Unique game UUID
	id: ID!

	# Dynamic game parameters
	revision: Revision!
}

# Game represents revision object
type Revision {
	# Unique game revision ID
	id: ID!

	# Unique game UUID
	gameID: String!

	# User- and SEO-friendly short text used in a URL
	slug: String!

	title: String!

	summary: String!

	# game type
	type: GameType!

	description: String!

	developers: [Developer!]!

	publishers: [Publisher!]!

	# Release Date in ISO 8601 Extended UTC
	releaseDate: String!

	# License line
	license: String!

	# Age ranking: 17+
	ranking: String!

	genres: [Genre!]!
	tags: [Tag!]!
	features: [Feature!]!
	localizations: [Localization!]!

	platforms: [GamePlatform!]!
	requirements: [SystemRequirements!]!

#	media: Media!

	# Critics
#	reviews: Reviews
	# Age ratings PEGI, ESRB, etc
#	ratings: [Rating!]
#	pricing: Pricing
}

type Pricing {
	price: Float
	currency: String
	discount: Int
}

type Rating {
	agency: String!
}

type Reviews {
	score: Int
	review: [Review!]
}

type Review {
	# date: String
	url: String
	score: Int
	quote: String
    pressName: String
    author: String
 }

type Feature {
	id: ID!
	name: String!
}

type Genre {
	id: ID!
	name: String!
}

type Tag {
	id: ID!
	name: String!
}

type Developer {
	id: ID!
	name: String!
}

type Publisher {
	id: ID!
	name: String!
}

enum GameType {
	web
	desktop
}

enum GamePlatform {
	linux
	macOS
	windows
	web
}

type Localization {
	# ISO 639-2
	language: String!
	interface: Boolean!
	audio: Boolean!
	subtitles: Boolean!
}


type SystemRequirements {
	platform: GamePlatform!
	minimal: RequirementsSet!
	recommended: RequirementsSet!
}

type RequirementsSet {
	cpu: String!
	gpu: String!
	diskSpace: Int!
	ram: Int!
}

#type Media {
#	screenshots: [Image!]!
#	trailers: [Video!]!
#}
#
#
#type Image {
#	url: String!
#}
#
#type Video {
#	url: String!
#}
